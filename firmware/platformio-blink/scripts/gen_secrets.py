import os
from pathlib import Path
from textwrap import dedent

"""PlatformIO pre-build script to emit include/generated_secrets.h.

Avoids using __file__ (not guaranteed in SCons exec context). Resolves project
directory via SCons env (if available) or PIOPROJECT_DIR environment variable.
"""

def resolve_project_dir() -> Path:
  # Try SCons Import first
  try:
    from SCons.Script import Import  # type: ignore
    Import("env")  # provides 'env' in globals
    project_dir = Path(globals()["env"]["PROJECT_DIR"])  # type: ignore
    return project_dir
  except Exception:
    # Fallback to environment variable or current working directory
    return Path(os.getenv("PIOPROJECT_DIR", os.getcwd()))

def generate_header():
  project_dir = resolve_project_dir()
  include_dir = project_dir / "include"
  include_dir.mkdir(exist_ok=True)
  ssid = os.getenv("WIFI_SSID", "")
  pw = os.getenv("WIFI_PASS", "")
  have = 1 if ssid and pw else 0
  header = dedent(
    f"""
    // Auto-generated by scripts/gen_secrets.py. DO NOT COMMIT.
    #pragma once
    #define WIFI_SSID "{ssid}"
    #define WIFI_PASS "{pw}"
    #define WIFI_HAVE_CREDS {have}
    """
  ).strip() + "\n"
  out_path = include_dir / "generated_secrets.h"
  out_path.write_text(header, encoding="utf-8")
  print(f"[gen_secrets] Wrote {out_path} (WIFI_HAVE_CREDS={have})")

generate_header()
